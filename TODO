# Active

    x. document ZeroMQ api

    2. create the following codes:

      x dhub
      x dquery
      - dadd
      - worker

    3. create tests using api to run a simple workflow

    4. implement documentation

    5. check tests

    6. performance benchmark

# Waiting TODO-s

    *. Add a hub test.

    *. Get cmake to generate the Task protobuf sources.

    *. Integrate testing into the build / pull request process.

    *. List out minimal desired API for users of this libary.

    *. create simple test workflow examples

    *. codify actor behavior

      - implement QueryMsg / hub interaction

    *. implement system health manager

    *. implement stage-in copy jobs

    *. improve task I/O backend

    *. implement graceful shutdown - write all tasks to
       a file with the same format as 


# Re-consider expanded scope:

  * Central fields (already done):

    - ready ~> list of "ready" <TaskID>s (removed when assigned)

    - assigned/<Worker> ~> set of <TaskID>s assigned to worker

  * Additional field to handle task-associated info (not implemented):

    - waiting ~> set of "waiting" <TaskID>s (removed when ready)

    - tasks/<TaskID> ~> protobuf <Task> message associated to <TaskID>

  * Additional fields needed to handle work stealing:

    - location/<TaskID> ~> (<Worker>, <Worker>) first and last-known owners of task

