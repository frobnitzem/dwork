// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TaskMsg.proto

#ifndef PROTOBUF_TaskMsg_2eproto__INCLUDED
#define PROTOBUF_TaskMsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace dwork {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_TaskMsg_2eproto();
void protobuf_AssignDesc_TaskMsg_2eproto();
void protobuf_ShutdownFile_TaskMsg_2eproto();

class QueryMsg;
class TaskMsg;
class TaskMsg_Dep;
class TaskMsg_LogMsg;

enum TaskMsg_State {
  TaskMsg_State_Pending = 0,
  TaskMsg_State_Stolen = 1,
  TaskMsg_State_Waiting = 2,
  TaskMsg_State_Copying = 3,
  TaskMsg_State_Ready = 4,
  TaskMsg_State_Started = 5,
  TaskMsg_State_Done = 6,
  TaskMsg_State_Recorded = 7
};
bool TaskMsg_State_IsValid(int value);
const TaskMsg_State TaskMsg_State_State_MIN = TaskMsg_State_Pending;
const TaskMsg_State TaskMsg_State_State_MAX = TaskMsg_State_Recorded;
const int TaskMsg_State_State_ARRAYSIZE = TaskMsg_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* TaskMsg_State_descriptor();
inline const ::std::string& TaskMsg_State_Name(TaskMsg_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    TaskMsg_State_descriptor(), value);
}
inline bool TaskMsg_State_Parse(
    const ::std::string& name, TaskMsg_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TaskMsg_State>(
    TaskMsg_State_descriptor(), name, value);
}
enum QueryMsg_Type {
  QueryMsg_Type_Create = 0,
  QueryMsg_Type_Steal = 1,
  QueryMsg_Type_Transfer = 2,
  QueryMsg_Type_Lookup = 3,
  QueryMsg_Type_NotFound = 4,
  QueryMsg_Type_OK = 5,
  QueryMsg_Type_Exit = 6,
  QueryMsg_Type_Error = 7
};
bool QueryMsg_Type_IsValid(int value);
const QueryMsg_Type QueryMsg_Type_Type_MIN = QueryMsg_Type_Create;
const QueryMsg_Type QueryMsg_Type_Type_MAX = QueryMsg_Type_Error;
const int QueryMsg_Type_Type_ARRAYSIZE = QueryMsg_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* QueryMsg_Type_descriptor();
inline const ::std::string& QueryMsg_Type_Name(QueryMsg_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    QueryMsg_Type_descriptor(), value);
}
inline bool QueryMsg_Type_Parse(
    const ::std::string& name, QueryMsg_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QueryMsg_Type>(
    QueryMsg_Type_descriptor(), name, value);
}
// ===================================================================

class TaskMsg_Dep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dwork.TaskMsg.Dep) */ {
 public:
  TaskMsg_Dep();
  virtual ~TaskMsg_Dep();

  TaskMsg_Dep(const TaskMsg_Dep& from);

  inline TaskMsg_Dep& operator=(const TaskMsg_Dep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskMsg_Dep& default_instance();

  void Swap(TaskMsg_Dep* other);

  // implements Message ----------------------------------------------

  inline TaskMsg_Dep* New() const { return New(NULL); }

  TaskMsg_Dep* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskMsg_Dep& from);
  void MergeFrom(const TaskMsg_Dep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TaskMsg_Dep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string location = 2;
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 2;
  const ::std::string& location() const;
  void set_location(const ::std::string& value);
  void set_location(const char* value);
  void set_location(const char* value, size_t size);
  ::std::string* mutable_location();
  ::std::string* release_location();
  void set_allocated_location(::std::string* location);

  // @@protoc_insertion_point(class_scope:dwork.TaskMsg.Dep)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_location();
  inline void clear_has_location();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr location_;
  friend void  protobuf_AddDesc_TaskMsg_2eproto();
  friend void protobuf_AssignDesc_TaskMsg_2eproto();
  friend void protobuf_ShutdownFile_TaskMsg_2eproto();

  void InitAsDefaultInstance();
  static TaskMsg_Dep* default_instance_;
};
// -------------------------------------------------------------------

class TaskMsg_LogMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dwork.TaskMsg.LogMsg) */ {
 public:
  TaskMsg_LogMsg();
  virtual ~TaskMsg_LogMsg();

  TaskMsg_LogMsg(const TaskMsg_LogMsg& from);

  inline TaskMsg_LogMsg& operator=(const TaskMsg_LogMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskMsg_LogMsg& default_instance();

  void Swap(TaskMsg_LogMsg* other);

  // implements Message ----------------------------------------------

  inline TaskMsg_LogMsg* New() const { return New(NULL); }

  TaskMsg_LogMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskMsg_LogMsg& from);
  void MergeFrom(const TaskMsg_LogMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TaskMsg_LogMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .dwork.TaskMsg.State state = 1;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::dwork::TaskMsg_State state() const;
  void set_state(::dwork::TaskMsg_State value);

  // required int64 time = 2;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:dwork.TaskMsg.LogMsg)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_time();
  inline void clear_has_time();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 time_;
  int state_;
  friend void  protobuf_AddDesc_TaskMsg_2eproto();
  friend void protobuf_AssignDesc_TaskMsg_2eproto();
  friend void protobuf_ShutdownFile_TaskMsg_2eproto();

  void InitAsDefaultInstance();
  static TaskMsg_LogMsg* default_instance_;
};
// -------------------------------------------------------------------

class TaskMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dwork.TaskMsg) */ {
 public:
  TaskMsg();
  virtual ~TaskMsg();

  TaskMsg(const TaskMsg& from);

  inline TaskMsg& operator=(const TaskMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskMsg& default_instance();

  void Swap(TaskMsg* other);

  // implements Message ----------------------------------------------

  inline TaskMsg* New() const { return New(NULL); }

  TaskMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskMsg& from);
  void MergeFrom(const TaskMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TaskMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef TaskMsg_Dep Dep;
  typedef TaskMsg_LogMsg LogMsg;

  typedef TaskMsg_State State;
  static const State Pending =
    TaskMsg_State_Pending;
  static const State Stolen =
    TaskMsg_State_Stolen;
  static const State Waiting =
    TaskMsg_State_Waiting;
  static const State Copying =
    TaskMsg_State_Copying;
  static const State Ready =
    TaskMsg_State_Ready;
  static const State Started =
    TaskMsg_State_Started;
  static const State Done =
    TaskMsg_State_Done;
  static const State Recorded =
    TaskMsg_State_Recorded;
  static inline bool State_IsValid(int value) {
    return TaskMsg_State_IsValid(value);
  }
  static const State State_MIN =
    TaskMsg_State_State_MIN;
  static const State State_MAX =
    TaskMsg_State_State_MAX;
  static const int State_ARRAYSIZE =
    TaskMsg_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return TaskMsg_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return TaskMsg_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return TaskMsg_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required string origin = 2;
  bool has_origin() const;
  void clear_origin();
  static const int kOriginFieldNumber = 2;
  const ::std::string& origin() const;
  void set_origin(const ::std::string& value);
  void set_origin(const char* value);
  void set_origin(const char* value, size_t size);
  ::std::string* mutable_origin();
  ::std::string* release_origin();
  void set_allocated_origin(::std::string* origin);

  // repeated .dwork.TaskMsg.Dep pred = 4;
  int pred_size() const;
  void clear_pred();
  static const int kPredFieldNumber = 4;
  const ::dwork::TaskMsg_Dep& pred(int index) const;
  ::dwork::TaskMsg_Dep* mutable_pred(int index);
  ::dwork::TaskMsg_Dep* add_pred();
  ::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg_Dep >*
      mutable_pred();
  const ::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg_Dep >&
      pred() const;

  // repeated .dwork.TaskMsg.Dep succ = 5;
  int succ_size() const;
  void clear_succ();
  static const int kSuccFieldNumber = 5;
  const ::dwork::TaskMsg_Dep& succ(int index) const;
  ::dwork::TaskMsg_Dep* mutable_succ(int index);
  ::dwork::TaskMsg_Dep* add_succ();
  ::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg_Dep >*
      mutable_succ();
  const ::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg_Dep >&
      succ() const;

  // repeated .dwork.TaskMsg.LogMsg log = 6;
  int log_size() const;
  void clear_log();
  static const int kLogFieldNumber = 6;
  const ::dwork::TaskMsg_LogMsg& log(int index) const;
  ::dwork::TaskMsg_LogMsg* mutable_log(int index);
  ::dwork::TaskMsg_LogMsg* add_log();
  ::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg_LogMsg >*
      mutable_log();
  const ::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg_LogMsg >&
      log() const;

  // @@protoc_insertion_point(class_scope:dwork.TaskMsg)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_origin();
  inline void clear_has_origin();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr origin_;
  ::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg_Dep > pred_;
  ::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg_Dep > succ_;
  ::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg_LogMsg > log_;
  friend void  protobuf_AddDesc_TaskMsg_2eproto();
  friend void protobuf_AssignDesc_TaskMsg_2eproto();
  friend void protobuf_ShutdownFile_TaskMsg_2eproto();

  void InitAsDefaultInstance();
  static TaskMsg* default_instance_;
};
// -------------------------------------------------------------------

class QueryMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dwork.QueryMsg) */ {
 public:
  QueryMsg();
  virtual ~QueryMsg();

  QueryMsg(const QueryMsg& from);

  inline QueryMsg& operator=(const QueryMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryMsg& default_instance();

  void Swap(QueryMsg* other);

  // implements Message ----------------------------------------------

  inline QueryMsg* New() const { return New(NULL); }

  QueryMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryMsg& from);
  void MergeFrom(const QueryMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef QueryMsg_Type Type;
  static const Type Create =
    QueryMsg_Type_Create;
  static const Type Steal =
    QueryMsg_Type_Steal;
  static const Type Transfer =
    QueryMsg_Type_Transfer;
  static const Type Lookup =
    QueryMsg_Type_Lookup;
  static const Type NotFound =
    QueryMsg_Type_NotFound;
  static const Type OK =
    QueryMsg_Type_OK;
  static const Type Exit =
    QueryMsg_Type_Exit;
  static const Type Error =
    QueryMsg_Type_Error;
  static inline bool Type_IsValid(int value) {
    return QueryMsg_Type_IsValid(value);
  }
  static const Type Type_MIN =
    QueryMsg_Type_Type_MIN;
  static const Type Type_MAX =
    QueryMsg_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    QueryMsg_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return QueryMsg_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return QueryMsg_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return QueryMsg_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .dwork.QueryMsg.Type type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::dwork::QueryMsg_Type type() const;
  void set_type(::dwork::QueryMsg_Type value);

  // repeated .dwork.TaskMsg task = 2;
  int task_size() const;
  void clear_task();
  static const int kTaskFieldNumber = 2;
  const ::dwork::TaskMsg& task(int index) const;
  ::dwork::TaskMsg* mutable_task(int index);
  ::dwork::TaskMsg* add_task();
  ::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg >*
      mutable_task();
  const ::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg >&
      task() const;

  // optional string name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 n = 4;
  bool has_n() const;
  void clear_n();
  static const int kNFieldNumber = 4;
  ::google::protobuf::int32 n() const;
  void set_n(::google::protobuf::int32 value);

  // optional string location = 6;
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 6;
  const ::std::string& location() const;
  void set_location(const ::std::string& value);
  void set_location(const char* value);
  void set_location(const char* value, size_t size);
  ::std::string* mutable_location();
  ::std::string* release_location();
  void set_allocated_location(::std::string* location);

  // @@protoc_insertion_point(class_scope:dwork.QueryMsg)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_n();
  inline void clear_has_n();
  inline void set_has_location();
  inline void clear_has_location();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg > task_;
  int type_;
  ::google::protobuf::int32 n_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr location_;
  friend void  protobuf_AddDesc_TaskMsg_2eproto();
  friend void protobuf_AssignDesc_TaskMsg_2eproto();
  friend void protobuf_ShutdownFile_TaskMsg_2eproto();

  void InitAsDefaultInstance();
  static QueryMsg* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TaskMsg_Dep

// required string name = 1;
inline bool TaskMsg_Dep::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TaskMsg_Dep::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TaskMsg_Dep::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TaskMsg_Dep::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& TaskMsg_Dep::name() const {
  // @@protoc_insertion_point(field_get:dwork.TaskMsg.Dep.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskMsg_Dep::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dwork.TaskMsg.Dep.name)
}
inline void TaskMsg_Dep::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dwork.TaskMsg.Dep.name)
}
inline void TaskMsg_Dep::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dwork.TaskMsg.Dep.name)
}
inline ::std::string* TaskMsg_Dep::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:dwork.TaskMsg.Dep.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TaskMsg_Dep::release_name() {
  // @@protoc_insertion_point(field_release:dwork.TaskMsg.Dep.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskMsg_Dep::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dwork.TaskMsg.Dep.name)
}

// optional string location = 2;
inline bool TaskMsg_Dep::has_location() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TaskMsg_Dep::set_has_location() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TaskMsg_Dep::clear_has_location() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TaskMsg_Dep::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_location();
}
inline const ::std::string& TaskMsg_Dep::location() const {
  // @@protoc_insertion_point(field_get:dwork.TaskMsg.Dep.location)
  return location_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskMsg_Dep::set_location(const ::std::string& value) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dwork.TaskMsg.Dep.location)
}
inline void TaskMsg_Dep::set_location(const char* value) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dwork.TaskMsg.Dep.location)
}
inline void TaskMsg_Dep::set_location(const char* value, size_t size) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dwork.TaskMsg.Dep.location)
}
inline ::std::string* TaskMsg_Dep::mutable_location() {
  set_has_location();
  // @@protoc_insertion_point(field_mutable:dwork.TaskMsg.Dep.location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TaskMsg_Dep::release_location() {
  // @@protoc_insertion_point(field_release:dwork.TaskMsg.Dep.location)
  clear_has_location();
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskMsg_Dep::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    set_has_location();
  } else {
    clear_has_location();
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:dwork.TaskMsg.Dep.location)
}

// -------------------------------------------------------------------

// TaskMsg_LogMsg

// required .dwork.TaskMsg.State state = 1;
inline bool TaskMsg_LogMsg::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TaskMsg_LogMsg::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TaskMsg_LogMsg::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TaskMsg_LogMsg::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::dwork::TaskMsg_State TaskMsg_LogMsg::state() const {
  // @@protoc_insertion_point(field_get:dwork.TaskMsg.LogMsg.state)
  return static_cast< ::dwork::TaskMsg_State >(state_);
}
inline void TaskMsg_LogMsg::set_state(::dwork::TaskMsg_State value) {
  assert(::dwork::TaskMsg_State_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:dwork.TaskMsg.LogMsg.state)
}

// required int64 time = 2;
inline bool TaskMsg_LogMsg::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TaskMsg_LogMsg::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TaskMsg_LogMsg::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TaskMsg_LogMsg::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 TaskMsg_LogMsg::time() const {
  // @@protoc_insertion_point(field_get:dwork.TaskMsg.LogMsg.time)
  return time_;
}
inline void TaskMsg_LogMsg::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:dwork.TaskMsg.LogMsg.time)
}

// -------------------------------------------------------------------

// TaskMsg

// required string name = 1;
inline bool TaskMsg::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TaskMsg::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TaskMsg::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TaskMsg::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& TaskMsg::name() const {
  // @@protoc_insertion_point(field_get:dwork.TaskMsg.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskMsg::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dwork.TaskMsg.name)
}
inline void TaskMsg::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dwork.TaskMsg.name)
}
inline void TaskMsg::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dwork.TaskMsg.name)
}
inline ::std::string* TaskMsg::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:dwork.TaskMsg.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TaskMsg::release_name() {
  // @@protoc_insertion_point(field_release:dwork.TaskMsg.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskMsg::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dwork.TaskMsg.name)
}

// required string origin = 2;
inline bool TaskMsg::has_origin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TaskMsg::set_has_origin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TaskMsg::clear_has_origin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TaskMsg::clear_origin() {
  origin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_origin();
}
inline const ::std::string& TaskMsg::origin() const {
  // @@protoc_insertion_point(field_get:dwork.TaskMsg.origin)
  return origin_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskMsg::set_origin(const ::std::string& value) {
  set_has_origin();
  origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dwork.TaskMsg.origin)
}
inline void TaskMsg::set_origin(const char* value) {
  set_has_origin();
  origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dwork.TaskMsg.origin)
}
inline void TaskMsg::set_origin(const char* value, size_t size) {
  set_has_origin();
  origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dwork.TaskMsg.origin)
}
inline ::std::string* TaskMsg::mutable_origin() {
  set_has_origin();
  // @@protoc_insertion_point(field_mutable:dwork.TaskMsg.origin)
  return origin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TaskMsg::release_origin() {
  // @@protoc_insertion_point(field_release:dwork.TaskMsg.origin)
  clear_has_origin();
  return origin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TaskMsg::set_allocated_origin(::std::string* origin) {
  if (origin != NULL) {
    set_has_origin();
  } else {
    clear_has_origin();
  }
  origin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), origin);
  // @@protoc_insertion_point(field_set_allocated:dwork.TaskMsg.origin)
}

// repeated .dwork.TaskMsg.Dep pred = 4;
inline int TaskMsg::pred_size() const {
  return pred_.size();
}
inline void TaskMsg::clear_pred() {
  pred_.Clear();
}
inline const ::dwork::TaskMsg_Dep& TaskMsg::pred(int index) const {
  // @@protoc_insertion_point(field_get:dwork.TaskMsg.pred)
  return pred_.Get(index);
}
inline ::dwork::TaskMsg_Dep* TaskMsg::mutable_pred(int index) {
  // @@protoc_insertion_point(field_mutable:dwork.TaskMsg.pred)
  return pred_.Mutable(index);
}
inline ::dwork::TaskMsg_Dep* TaskMsg::add_pred() {
  // @@protoc_insertion_point(field_add:dwork.TaskMsg.pred)
  return pred_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg_Dep >*
TaskMsg::mutable_pred() {
  // @@protoc_insertion_point(field_mutable_list:dwork.TaskMsg.pred)
  return &pred_;
}
inline const ::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg_Dep >&
TaskMsg::pred() const {
  // @@protoc_insertion_point(field_list:dwork.TaskMsg.pred)
  return pred_;
}

// repeated .dwork.TaskMsg.Dep succ = 5;
inline int TaskMsg::succ_size() const {
  return succ_.size();
}
inline void TaskMsg::clear_succ() {
  succ_.Clear();
}
inline const ::dwork::TaskMsg_Dep& TaskMsg::succ(int index) const {
  // @@protoc_insertion_point(field_get:dwork.TaskMsg.succ)
  return succ_.Get(index);
}
inline ::dwork::TaskMsg_Dep* TaskMsg::mutable_succ(int index) {
  // @@protoc_insertion_point(field_mutable:dwork.TaskMsg.succ)
  return succ_.Mutable(index);
}
inline ::dwork::TaskMsg_Dep* TaskMsg::add_succ() {
  // @@protoc_insertion_point(field_add:dwork.TaskMsg.succ)
  return succ_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg_Dep >*
TaskMsg::mutable_succ() {
  // @@protoc_insertion_point(field_mutable_list:dwork.TaskMsg.succ)
  return &succ_;
}
inline const ::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg_Dep >&
TaskMsg::succ() const {
  // @@protoc_insertion_point(field_list:dwork.TaskMsg.succ)
  return succ_;
}

// repeated .dwork.TaskMsg.LogMsg log = 6;
inline int TaskMsg::log_size() const {
  return log_.size();
}
inline void TaskMsg::clear_log() {
  log_.Clear();
}
inline const ::dwork::TaskMsg_LogMsg& TaskMsg::log(int index) const {
  // @@protoc_insertion_point(field_get:dwork.TaskMsg.log)
  return log_.Get(index);
}
inline ::dwork::TaskMsg_LogMsg* TaskMsg::mutable_log(int index) {
  // @@protoc_insertion_point(field_mutable:dwork.TaskMsg.log)
  return log_.Mutable(index);
}
inline ::dwork::TaskMsg_LogMsg* TaskMsg::add_log() {
  // @@protoc_insertion_point(field_add:dwork.TaskMsg.log)
  return log_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg_LogMsg >*
TaskMsg::mutable_log() {
  // @@protoc_insertion_point(field_mutable_list:dwork.TaskMsg.log)
  return &log_;
}
inline const ::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg_LogMsg >&
TaskMsg::log() const {
  // @@protoc_insertion_point(field_list:dwork.TaskMsg.log)
  return log_;
}

// -------------------------------------------------------------------

// QueryMsg

// required .dwork.QueryMsg.Type type = 1;
inline bool QueryMsg::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryMsg::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryMsg::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryMsg::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::dwork::QueryMsg_Type QueryMsg::type() const {
  // @@protoc_insertion_point(field_get:dwork.QueryMsg.type)
  return static_cast< ::dwork::QueryMsg_Type >(type_);
}
inline void QueryMsg::set_type(::dwork::QueryMsg_Type value) {
  assert(::dwork::QueryMsg_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:dwork.QueryMsg.type)
}

// repeated .dwork.TaskMsg task = 2;
inline int QueryMsg::task_size() const {
  return task_.size();
}
inline void QueryMsg::clear_task() {
  task_.Clear();
}
inline const ::dwork::TaskMsg& QueryMsg::task(int index) const {
  // @@protoc_insertion_point(field_get:dwork.QueryMsg.task)
  return task_.Get(index);
}
inline ::dwork::TaskMsg* QueryMsg::mutable_task(int index) {
  // @@protoc_insertion_point(field_mutable:dwork.QueryMsg.task)
  return task_.Mutable(index);
}
inline ::dwork::TaskMsg* QueryMsg::add_task() {
  // @@protoc_insertion_point(field_add:dwork.QueryMsg.task)
  return task_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg >*
QueryMsg::mutable_task() {
  // @@protoc_insertion_point(field_mutable_list:dwork.QueryMsg.task)
  return &task_;
}
inline const ::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg >&
QueryMsg::task() const {
  // @@protoc_insertion_point(field_list:dwork.QueryMsg.task)
  return task_;
}

// optional string name = 3;
inline bool QueryMsg::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryMsg::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryMsg::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryMsg::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& QueryMsg::name() const {
  // @@protoc_insertion_point(field_get:dwork.QueryMsg.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryMsg::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dwork.QueryMsg.name)
}
inline void QueryMsg::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dwork.QueryMsg.name)
}
inline void QueryMsg::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dwork.QueryMsg.name)
}
inline ::std::string* QueryMsg::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:dwork.QueryMsg.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryMsg::release_name() {
  // @@protoc_insertion_point(field_release:dwork.QueryMsg.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryMsg::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dwork.QueryMsg.name)
}

// optional int32 n = 4;
inline bool QueryMsg::has_n() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryMsg::set_has_n() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryMsg::clear_has_n() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryMsg::clear_n() {
  n_ = 0;
  clear_has_n();
}
inline ::google::protobuf::int32 QueryMsg::n() const {
  // @@protoc_insertion_point(field_get:dwork.QueryMsg.n)
  return n_;
}
inline void QueryMsg::set_n(::google::protobuf::int32 value) {
  set_has_n();
  n_ = value;
  // @@protoc_insertion_point(field_set:dwork.QueryMsg.n)
}

// optional string location = 6;
inline bool QueryMsg::has_location() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QueryMsg::set_has_location() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QueryMsg::clear_has_location() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QueryMsg::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_location();
}
inline const ::std::string& QueryMsg::location() const {
  // @@protoc_insertion_point(field_get:dwork.QueryMsg.location)
  return location_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryMsg::set_location(const ::std::string& value) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dwork.QueryMsg.location)
}
inline void QueryMsg::set_location(const char* value) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dwork.QueryMsg.location)
}
inline void QueryMsg::set_location(const char* value, size_t size) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dwork.QueryMsg.location)
}
inline ::std::string* QueryMsg::mutable_location() {
  set_has_location();
  // @@protoc_insertion_point(field_mutable:dwork.QueryMsg.location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryMsg::release_location() {
  // @@protoc_insertion_point(field_release:dwork.QueryMsg.location)
  clear_has_location();
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryMsg::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    set_has_location();
  } else {
    clear_has_location();
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:dwork.QueryMsg.location)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dwork

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::dwork::TaskMsg_State> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::dwork::TaskMsg_State>() {
  return ::dwork::TaskMsg_State_descriptor();
}
template <> struct is_proto_enum< ::dwork::QueryMsg_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::dwork::QueryMsg_Type>() {
  return ::dwork::QueryMsg_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_TaskMsg_2eproto__INCLUDED
