// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TaskMsg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "TaskMsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace dwork {

namespace {

const ::google::protobuf::Descriptor* TaskMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TaskMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* TaskMsg_Dep_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TaskMsg_Dep_reflection_ = NULL;
const ::google::protobuf::Descriptor* TaskMsg_LogMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TaskMsg_LogMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TaskMsg_State_descriptor_ = NULL;
const ::google::protobuf::Descriptor* QueryMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* QueryMsg_Type_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_TaskMsg_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_TaskMsg_2eproto() {
  protobuf_AddDesc_TaskMsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "TaskMsg.proto");
  GOOGLE_CHECK(file != NULL);
  TaskMsg_descriptor_ = file->message_type(0);
  static const int TaskMsg_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskMsg, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskMsg, origin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskMsg, pred_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskMsg, succ_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskMsg, log_),
  };
  TaskMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TaskMsg_descriptor_,
      TaskMsg::default_instance_,
      TaskMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskMsg, _has_bits_[0]),
      -1,
      -1,
      sizeof(TaskMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskMsg, _internal_metadata_),
      -1);
  TaskMsg_Dep_descriptor_ = TaskMsg_descriptor_->nested_type(0);
  static const int TaskMsg_Dep_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskMsg_Dep, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskMsg_Dep, location_),
  };
  TaskMsg_Dep_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TaskMsg_Dep_descriptor_,
      TaskMsg_Dep::default_instance_,
      TaskMsg_Dep_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskMsg_Dep, _has_bits_[0]),
      -1,
      -1,
      sizeof(TaskMsg_Dep),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskMsg_Dep, _internal_metadata_),
      -1);
  TaskMsg_LogMsg_descriptor_ = TaskMsg_descriptor_->nested_type(1);
  static const int TaskMsg_LogMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskMsg_LogMsg, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskMsg_LogMsg, time_),
  };
  TaskMsg_LogMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TaskMsg_LogMsg_descriptor_,
      TaskMsg_LogMsg::default_instance_,
      TaskMsg_LogMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskMsg_LogMsg, _has_bits_[0]),
      -1,
      -1,
      sizeof(TaskMsg_LogMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskMsg_LogMsg, _internal_metadata_),
      -1);
  TaskMsg_State_descriptor_ = TaskMsg_descriptor_->enum_type(0);
  QueryMsg_descriptor_ = file->message_type(1);
  static const int QueryMsg_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMsg, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMsg, task_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMsg, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMsg, n_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMsg, location_),
  };
  QueryMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryMsg_descriptor_,
      QueryMsg::default_instance_,
      QueryMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMsg, _has_bits_[0]),
      -1,
      -1,
      sizeof(QueryMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryMsg, _internal_metadata_),
      -1);
  QueryMsg_Type_descriptor_ = QueryMsg_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_TaskMsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TaskMsg_descriptor_, &TaskMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TaskMsg_Dep_descriptor_, &TaskMsg_Dep::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TaskMsg_LogMsg_descriptor_, &TaskMsg_LogMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryMsg_descriptor_, &QueryMsg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_TaskMsg_2eproto() {
  delete TaskMsg::default_instance_;
  delete TaskMsg_reflection_;
  delete TaskMsg_Dep::default_instance_;
  delete TaskMsg_Dep_reflection_;
  delete TaskMsg_LogMsg::default_instance_;
  delete TaskMsg_LogMsg_reflection_;
  delete QueryMsg::default_instance_;
  delete QueryMsg_reflection_;
}

void protobuf_AddDesc_TaskMsg_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_TaskMsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rTaskMsg.proto\022\005dwork\"\337\002\n\007TaskMsg\022\014\n\004na"
    "me\030\001 \002(\t\022\016\n\006origin\030\002 \002(\t\022 \n\004pred\030\004 \003(\0132\022"
    ".dwork.TaskMsg.Dep\022 \n\004succ\030\005 \003(\0132\022.dwork"
    ".TaskMsg.Dep\022\"\n\003log\030\006 \003(\0132\025.dwork.TaskMs"
    "g.LogMsg\032%\n\003Dep\022\014\n\004name\030\001 \002(\t\022\020\n\010locatio"
    "n\030\002 \001(\t\032;\n\006LogMsg\022#\n\005state\030\001 \002(\0162\024.dwork"
    ".TaskMsg.State\022\014\n\004time\030\002 \002(\003\"j\n\005State\022\013\n"
    "\007Pending\020\000\022\n\n\006Stolen\020\001\022\013\n\007Waiting\020\002\022\013\n\007C"
    "opying\020\003\022\t\n\005Ready\020\004\022\013\n\007Started\020\005\022\010\n\004Done"
    "\020\006\022\014\n\010Recorded\020\007\"\333\001\n\010QueryMsg\022\"\n\004type\030\001 "
    "\002(\0162\024.dwork.QueryMsg.Type\022\034\n\004task\030\002 \003(\0132"
    "\016.dwork.TaskMsg\022\014\n\004name\030\003 \001(\t\022\t\n\001n\030\004 \001(\005"
    "\022\020\n\010location\030\006 \001(\t\"b\n\004Type\022\n\n\006Create\020\000\022\t"
    "\n\005Steal\020\001\022\014\n\010Transfer\020\002\022\n\n\006Lookup\020\003\022\014\n\010N"
    "otFound\020\004\022\006\n\002OK\020\005\022\010\n\004Exit\020\006\022\t\n\005Error\020\007", 598);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "TaskMsg.proto", &protobuf_RegisterTypes);
  TaskMsg::default_instance_ = new TaskMsg();
  TaskMsg_Dep::default_instance_ = new TaskMsg_Dep();
  TaskMsg_LogMsg::default_instance_ = new TaskMsg_LogMsg();
  QueryMsg::default_instance_ = new QueryMsg();
  TaskMsg::default_instance_->InitAsDefaultInstance();
  TaskMsg_Dep::default_instance_->InitAsDefaultInstance();
  TaskMsg_LogMsg::default_instance_->InitAsDefaultInstance();
  QueryMsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_TaskMsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_TaskMsg_2eproto {
  StaticDescriptorInitializer_TaskMsg_2eproto() {
    protobuf_AddDesc_TaskMsg_2eproto();
  }
} static_descriptor_initializer_TaskMsg_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* TaskMsg_State_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TaskMsg_State_descriptor_;
}
bool TaskMsg_State_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TaskMsg_State TaskMsg::Pending;
const TaskMsg_State TaskMsg::Stolen;
const TaskMsg_State TaskMsg::Waiting;
const TaskMsg_State TaskMsg::Copying;
const TaskMsg_State TaskMsg::Ready;
const TaskMsg_State TaskMsg::Started;
const TaskMsg_State TaskMsg::Done;
const TaskMsg_State TaskMsg::Recorded;
const TaskMsg_State TaskMsg::State_MIN;
const TaskMsg_State TaskMsg::State_MAX;
const int TaskMsg::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskMsg_Dep::kNameFieldNumber;
const int TaskMsg_Dep::kLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskMsg_Dep::TaskMsg_Dep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dwork.TaskMsg.Dep)
}

void TaskMsg_Dep::InitAsDefaultInstance() {
}

TaskMsg_Dep::TaskMsg_Dep(const TaskMsg_Dep& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dwork.TaskMsg.Dep)
}

void TaskMsg_Dep::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TaskMsg_Dep::~TaskMsg_Dep() {
  // @@protoc_insertion_point(destructor:dwork.TaskMsg.Dep)
  SharedDtor();
}

void TaskMsg_Dep::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TaskMsg_Dep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskMsg_Dep::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TaskMsg_Dep_descriptor_;
}

const TaskMsg_Dep& TaskMsg_Dep::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TaskMsg_2eproto();
  return *default_instance_;
}

TaskMsg_Dep* TaskMsg_Dep::default_instance_ = NULL;

TaskMsg_Dep* TaskMsg_Dep::New(::google::protobuf::Arena* arena) const {
  TaskMsg_Dep* n = new TaskMsg_Dep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskMsg_Dep::Clear() {
// @@protoc_insertion_point(message_clear_start:dwork.TaskMsg.Dep)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_location()) {
      location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TaskMsg_Dep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dwork.TaskMsg.Dep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dwork.TaskMsg.Dep.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_location;
        break;
      }

      // optional string location = 2;
      case 2: {
        if (tag == 18) {
         parse_location:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->location().data(), this->location().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dwork.TaskMsg.Dep.location");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dwork.TaskMsg.Dep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dwork.TaskMsg.Dep)
  return false;
#undef DO_
}

void TaskMsg_Dep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dwork.TaskMsg.Dep)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dwork.TaskMsg.Dep.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string location = 2;
  if (has_location()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dwork.TaskMsg.Dep.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->location(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dwork.TaskMsg.Dep)
}

::google::protobuf::uint8* TaskMsg_Dep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dwork.TaskMsg.Dep)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dwork.TaskMsg.Dep.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string location = 2;
  if (has_location()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dwork.TaskMsg.Dep.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->location(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dwork.TaskMsg.Dep)
  return target;
}

int TaskMsg_Dep::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dwork.TaskMsg.Dep)
  int total_size = 0;

  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  // optional string location = 2;
  if (has_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskMsg_Dep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dwork.TaskMsg.Dep)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TaskMsg_Dep* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskMsg_Dep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dwork.TaskMsg.Dep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dwork.TaskMsg.Dep)
    MergeFrom(*source);
  }
}

void TaskMsg_Dep::MergeFrom(const TaskMsg_Dep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dwork.TaskMsg.Dep)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_location()) {
      set_has_location();
      location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TaskMsg_Dep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dwork.TaskMsg.Dep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskMsg_Dep::CopyFrom(const TaskMsg_Dep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dwork.TaskMsg.Dep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskMsg_Dep::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TaskMsg_Dep::Swap(TaskMsg_Dep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskMsg_Dep::InternalSwap(TaskMsg_Dep* other) {
  name_.Swap(&other->name_);
  location_.Swap(&other->location_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskMsg_Dep::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TaskMsg_Dep_descriptor_;
  metadata.reflection = TaskMsg_Dep_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskMsg_LogMsg::kStateFieldNumber;
const int TaskMsg_LogMsg::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskMsg_LogMsg::TaskMsg_LogMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dwork.TaskMsg.LogMsg)
}

void TaskMsg_LogMsg::InitAsDefaultInstance() {
}

TaskMsg_LogMsg::TaskMsg_LogMsg(const TaskMsg_LogMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dwork.TaskMsg.LogMsg)
}

void TaskMsg_LogMsg::SharedCtor() {
  _cached_size_ = 0;
  state_ = 0;
  time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TaskMsg_LogMsg::~TaskMsg_LogMsg() {
  // @@protoc_insertion_point(destructor:dwork.TaskMsg.LogMsg)
  SharedDtor();
}

void TaskMsg_LogMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TaskMsg_LogMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskMsg_LogMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TaskMsg_LogMsg_descriptor_;
}

const TaskMsg_LogMsg& TaskMsg_LogMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TaskMsg_2eproto();
  return *default_instance_;
}

TaskMsg_LogMsg* TaskMsg_LogMsg::default_instance_ = NULL;

TaskMsg_LogMsg* TaskMsg_LogMsg::New(::google::protobuf::Arena* arena) const {
  TaskMsg_LogMsg* n = new TaskMsg_LogMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskMsg_LogMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:dwork.TaskMsg.LogMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TaskMsg_LogMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TaskMsg_LogMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(time_, state_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TaskMsg_LogMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dwork.TaskMsg.LogMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .dwork.TaskMsg.State state = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::dwork::TaskMsg_State_IsValid(value)) {
            set_state(static_cast< ::dwork::TaskMsg_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_time;
        break;
      }

      // required int64 time = 2;
      case 2: {
        if (tag == 16) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dwork.TaskMsg.LogMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dwork.TaskMsg.LogMsg)
  return false;
#undef DO_
}

void TaskMsg_LogMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dwork.TaskMsg.LogMsg)
  // required .dwork.TaskMsg.State state = 1;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  // required int64 time = 2;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dwork.TaskMsg.LogMsg)
}

::google::protobuf::uint8* TaskMsg_LogMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dwork.TaskMsg.LogMsg)
  // required .dwork.TaskMsg.State state = 1;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  // required int64 time = 2;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dwork.TaskMsg.LogMsg)
  return target;
}

int TaskMsg_LogMsg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:dwork.TaskMsg.LogMsg)
  int total_size = 0;

  if (has_state()) {
    // required .dwork.TaskMsg.State state = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  if (has_time()) {
    // required int64 time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  return total_size;
}
int TaskMsg_LogMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dwork.TaskMsg.LogMsg)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .dwork.TaskMsg.State state = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());

    // required int64 time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskMsg_LogMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dwork.TaskMsg.LogMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TaskMsg_LogMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskMsg_LogMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dwork.TaskMsg.LogMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dwork.TaskMsg.LogMsg)
    MergeFrom(*source);
  }
}

void TaskMsg_LogMsg::MergeFrom(const TaskMsg_LogMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dwork.TaskMsg.LogMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TaskMsg_LogMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dwork.TaskMsg.LogMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskMsg_LogMsg::CopyFrom(const TaskMsg_LogMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dwork.TaskMsg.LogMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskMsg_LogMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void TaskMsg_LogMsg::Swap(TaskMsg_LogMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskMsg_LogMsg::InternalSwap(TaskMsg_LogMsg* other) {
  std::swap(state_, other->state_);
  std::swap(time_, other->time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskMsg_LogMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TaskMsg_LogMsg_descriptor_;
  metadata.reflection = TaskMsg_LogMsg_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskMsg::kNameFieldNumber;
const int TaskMsg::kOriginFieldNumber;
const int TaskMsg::kPredFieldNumber;
const int TaskMsg::kSuccFieldNumber;
const int TaskMsg::kLogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskMsg::TaskMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dwork.TaskMsg)
}

void TaskMsg::InitAsDefaultInstance() {
}

TaskMsg::TaskMsg(const TaskMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dwork.TaskMsg)
}

void TaskMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  origin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TaskMsg::~TaskMsg() {
  // @@protoc_insertion_point(destructor:dwork.TaskMsg)
  SharedDtor();
}

void TaskMsg::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  origin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TaskMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TaskMsg_descriptor_;
}

const TaskMsg& TaskMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TaskMsg_2eproto();
  return *default_instance_;
}

TaskMsg* TaskMsg::default_instance_ = NULL;

TaskMsg* TaskMsg::New(::google::protobuf::Arena* arena) const {
  TaskMsg* n = new TaskMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TaskMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:dwork.TaskMsg)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_origin()) {
      origin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  pred_.Clear();
  succ_.Clear();
  log_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TaskMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dwork.TaskMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dwork.TaskMsg.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_origin;
        break;
      }

      // required string origin = 2;
      case 2: {
        if (tag == 18) {
         parse_origin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_origin()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->origin().data(), this->origin().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dwork.TaskMsg.origin");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_pred;
        break;
      }

      // repeated .dwork.TaskMsg.Dep pred = 4;
      case 4: {
        if (tag == 34) {
         parse_pred:
          DO_(input->IncrementRecursionDepth());
         parse_loop_pred:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_pred()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_pred;
        if (input->ExpectTag(42)) goto parse_loop_succ;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .dwork.TaskMsg.Dep succ = 5;
      case 5: {
        if (tag == 42) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_succ:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_succ()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_succ;
        if (input->ExpectTag(50)) goto parse_loop_log;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .dwork.TaskMsg.LogMsg log = 6;
      case 6: {
        if (tag == 50) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_log:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_log()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_log;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dwork.TaskMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dwork.TaskMsg)
  return false;
#undef DO_
}

void TaskMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dwork.TaskMsg)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dwork.TaskMsg.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required string origin = 2;
  if (has_origin()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->origin().data(), this->origin().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dwork.TaskMsg.origin");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->origin(), output);
  }

  // repeated .dwork.TaskMsg.Dep pred = 4;
  for (unsigned int i = 0, n = this->pred_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->pred(i), output);
  }

  // repeated .dwork.TaskMsg.Dep succ = 5;
  for (unsigned int i = 0, n = this->succ_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->succ(i), output);
  }

  // repeated .dwork.TaskMsg.LogMsg log = 6;
  for (unsigned int i = 0, n = this->log_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->log(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dwork.TaskMsg)
}

::google::protobuf::uint8* TaskMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dwork.TaskMsg)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dwork.TaskMsg.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string origin = 2;
  if (has_origin()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->origin().data(), this->origin().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dwork.TaskMsg.origin");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->origin(), target);
  }

  // repeated .dwork.TaskMsg.Dep pred = 4;
  for (unsigned int i = 0, n = this->pred_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->pred(i), false, target);
  }

  // repeated .dwork.TaskMsg.Dep succ = 5;
  for (unsigned int i = 0, n = this->succ_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->succ(i), false, target);
  }

  // repeated .dwork.TaskMsg.LogMsg log = 6;
  for (unsigned int i = 0, n = this->log_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->log(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dwork.TaskMsg)
  return target;
}

int TaskMsg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:dwork.TaskMsg)
  int total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_origin()) {
    // required string origin = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->origin());
  }

  return total_size;
}
int TaskMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dwork.TaskMsg)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string origin = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->origin());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .dwork.TaskMsg.Dep pred = 4;
  total_size += 1 * this->pred_size();
  for (int i = 0; i < this->pred_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pred(i));
  }

  // repeated .dwork.TaskMsg.Dep succ = 5;
  total_size += 1 * this->succ_size();
  for (int i = 0; i < this->succ_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->succ(i));
  }

  // repeated .dwork.TaskMsg.LogMsg log = 6;
  total_size += 1 * this->log_size();
  for (int i = 0; i < this->log_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->log(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dwork.TaskMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TaskMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TaskMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dwork.TaskMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dwork.TaskMsg)
    MergeFrom(*source);
  }
}

void TaskMsg::MergeFrom(const TaskMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dwork.TaskMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  pred_.MergeFrom(from.pred_);
  succ_.MergeFrom(from.succ_);
  log_.MergeFrom(from.log_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_origin()) {
      set_has_origin();
      origin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origin_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TaskMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dwork.TaskMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskMsg::CopyFrom(const TaskMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dwork.TaskMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->pred())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->succ())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->log())) return false;
  return true;
}

void TaskMsg::Swap(TaskMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskMsg::InternalSwap(TaskMsg* other) {
  name_.Swap(&other->name_);
  origin_.Swap(&other->origin_);
  pred_.UnsafeArenaSwap(&other->pred_);
  succ_.UnsafeArenaSwap(&other->succ_);
  log_.UnsafeArenaSwap(&other->log_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TaskMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TaskMsg_descriptor_;
  metadata.reflection = TaskMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TaskMsg_Dep

// required string name = 1;
bool TaskMsg_Dep::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TaskMsg_Dep::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void TaskMsg_Dep::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void TaskMsg_Dep::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& TaskMsg_Dep::name() const {
  // @@protoc_insertion_point(field_get:dwork.TaskMsg.Dep.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskMsg_Dep::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dwork.TaskMsg.Dep.name)
}
 void TaskMsg_Dep::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dwork.TaskMsg.Dep.name)
}
 void TaskMsg_Dep::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dwork.TaskMsg.Dep.name)
}
 ::std::string* TaskMsg_Dep::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:dwork.TaskMsg.Dep.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TaskMsg_Dep::release_name() {
  // @@protoc_insertion_point(field_release:dwork.TaskMsg.Dep.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskMsg_Dep::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dwork.TaskMsg.Dep.name)
}

// optional string location = 2;
bool TaskMsg_Dep::has_location() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TaskMsg_Dep::set_has_location() {
  _has_bits_[0] |= 0x00000002u;
}
void TaskMsg_Dep::clear_has_location() {
  _has_bits_[0] &= ~0x00000002u;
}
void TaskMsg_Dep::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_location();
}
 const ::std::string& TaskMsg_Dep::location() const {
  // @@protoc_insertion_point(field_get:dwork.TaskMsg.Dep.location)
  return location_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskMsg_Dep::set_location(const ::std::string& value) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dwork.TaskMsg.Dep.location)
}
 void TaskMsg_Dep::set_location(const char* value) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dwork.TaskMsg.Dep.location)
}
 void TaskMsg_Dep::set_location(const char* value, size_t size) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dwork.TaskMsg.Dep.location)
}
 ::std::string* TaskMsg_Dep::mutable_location() {
  set_has_location();
  // @@protoc_insertion_point(field_mutable:dwork.TaskMsg.Dep.location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TaskMsg_Dep::release_location() {
  // @@protoc_insertion_point(field_release:dwork.TaskMsg.Dep.location)
  clear_has_location();
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskMsg_Dep::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    set_has_location();
  } else {
    clear_has_location();
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:dwork.TaskMsg.Dep.location)
}

// -------------------------------------------------------------------

// TaskMsg_LogMsg

// required .dwork.TaskMsg.State state = 1;
bool TaskMsg_LogMsg::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TaskMsg_LogMsg::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
void TaskMsg_LogMsg::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
void TaskMsg_LogMsg::clear_state() {
  state_ = 0;
  clear_has_state();
}
 ::dwork::TaskMsg_State TaskMsg_LogMsg::state() const {
  // @@protoc_insertion_point(field_get:dwork.TaskMsg.LogMsg.state)
  return static_cast< ::dwork::TaskMsg_State >(state_);
}
 void TaskMsg_LogMsg::set_state(::dwork::TaskMsg_State value) {
  assert(::dwork::TaskMsg_State_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:dwork.TaskMsg.LogMsg.state)
}

// required int64 time = 2;
bool TaskMsg_LogMsg::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TaskMsg_LogMsg::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
void TaskMsg_LogMsg::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void TaskMsg_LogMsg::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
 ::google::protobuf::int64 TaskMsg_LogMsg::time() const {
  // @@protoc_insertion_point(field_get:dwork.TaskMsg.LogMsg.time)
  return time_;
}
 void TaskMsg_LogMsg::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:dwork.TaskMsg.LogMsg.time)
}

// -------------------------------------------------------------------

// TaskMsg

// required string name = 1;
bool TaskMsg::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TaskMsg::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void TaskMsg::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void TaskMsg::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& TaskMsg::name() const {
  // @@protoc_insertion_point(field_get:dwork.TaskMsg.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskMsg::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dwork.TaskMsg.name)
}
 void TaskMsg::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dwork.TaskMsg.name)
}
 void TaskMsg::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dwork.TaskMsg.name)
}
 ::std::string* TaskMsg::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:dwork.TaskMsg.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TaskMsg::release_name() {
  // @@protoc_insertion_point(field_release:dwork.TaskMsg.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskMsg::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dwork.TaskMsg.name)
}

// required string origin = 2;
bool TaskMsg::has_origin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TaskMsg::set_has_origin() {
  _has_bits_[0] |= 0x00000002u;
}
void TaskMsg::clear_has_origin() {
  _has_bits_[0] &= ~0x00000002u;
}
void TaskMsg::clear_origin() {
  origin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_origin();
}
 const ::std::string& TaskMsg::origin() const {
  // @@protoc_insertion_point(field_get:dwork.TaskMsg.origin)
  return origin_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskMsg::set_origin(const ::std::string& value) {
  set_has_origin();
  origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dwork.TaskMsg.origin)
}
 void TaskMsg::set_origin(const char* value) {
  set_has_origin();
  origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dwork.TaskMsg.origin)
}
 void TaskMsg::set_origin(const char* value, size_t size) {
  set_has_origin();
  origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dwork.TaskMsg.origin)
}
 ::std::string* TaskMsg::mutable_origin() {
  set_has_origin();
  // @@protoc_insertion_point(field_mutable:dwork.TaskMsg.origin)
  return origin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TaskMsg::release_origin() {
  // @@protoc_insertion_point(field_release:dwork.TaskMsg.origin)
  clear_has_origin();
  return origin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TaskMsg::set_allocated_origin(::std::string* origin) {
  if (origin != NULL) {
    set_has_origin();
  } else {
    clear_has_origin();
  }
  origin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), origin);
  // @@protoc_insertion_point(field_set_allocated:dwork.TaskMsg.origin)
}

// repeated .dwork.TaskMsg.Dep pred = 4;
int TaskMsg::pred_size() const {
  return pred_.size();
}
void TaskMsg::clear_pred() {
  pred_.Clear();
}
const ::dwork::TaskMsg_Dep& TaskMsg::pred(int index) const {
  // @@protoc_insertion_point(field_get:dwork.TaskMsg.pred)
  return pred_.Get(index);
}
::dwork::TaskMsg_Dep* TaskMsg::mutable_pred(int index) {
  // @@protoc_insertion_point(field_mutable:dwork.TaskMsg.pred)
  return pred_.Mutable(index);
}
::dwork::TaskMsg_Dep* TaskMsg::add_pred() {
  // @@protoc_insertion_point(field_add:dwork.TaskMsg.pred)
  return pred_.Add();
}
::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg_Dep >*
TaskMsg::mutable_pred() {
  // @@protoc_insertion_point(field_mutable_list:dwork.TaskMsg.pred)
  return &pred_;
}
const ::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg_Dep >&
TaskMsg::pred() const {
  // @@protoc_insertion_point(field_list:dwork.TaskMsg.pred)
  return pred_;
}

// repeated .dwork.TaskMsg.Dep succ = 5;
int TaskMsg::succ_size() const {
  return succ_.size();
}
void TaskMsg::clear_succ() {
  succ_.Clear();
}
const ::dwork::TaskMsg_Dep& TaskMsg::succ(int index) const {
  // @@protoc_insertion_point(field_get:dwork.TaskMsg.succ)
  return succ_.Get(index);
}
::dwork::TaskMsg_Dep* TaskMsg::mutable_succ(int index) {
  // @@protoc_insertion_point(field_mutable:dwork.TaskMsg.succ)
  return succ_.Mutable(index);
}
::dwork::TaskMsg_Dep* TaskMsg::add_succ() {
  // @@protoc_insertion_point(field_add:dwork.TaskMsg.succ)
  return succ_.Add();
}
::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg_Dep >*
TaskMsg::mutable_succ() {
  // @@protoc_insertion_point(field_mutable_list:dwork.TaskMsg.succ)
  return &succ_;
}
const ::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg_Dep >&
TaskMsg::succ() const {
  // @@protoc_insertion_point(field_list:dwork.TaskMsg.succ)
  return succ_;
}

// repeated .dwork.TaskMsg.LogMsg log = 6;
int TaskMsg::log_size() const {
  return log_.size();
}
void TaskMsg::clear_log() {
  log_.Clear();
}
const ::dwork::TaskMsg_LogMsg& TaskMsg::log(int index) const {
  // @@protoc_insertion_point(field_get:dwork.TaskMsg.log)
  return log_.Get(index);
}
::dwork::TaskMsg_LogMsg* TaskMsg::mutable_log(int index) {
  // @@protoc_insertion_point(field_mutable:dwork.TaskMsg.log)
  return log_.Mutable(index);
}
::dwork::TaskMsg_LogMsg* TaskMsg::add_log() {
  // @@protoc_insertion_point(field_add:dwork.TaskMsg.log)
  return log_.Add();
}
::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg_LogMsg >*
TaskMsg::mutable_log() {
  // @@protoc_insertion_point(field_mutable_list:dwork.TaskMsg.log)
  return &log_;
}
const ::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg_LogMsg >&
TaskMsg::log() const {
  // @@protoc_insertion_point(field_list:dwork.TaskMsg.log)
  return log_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* QueryMsg_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryMsg_Type_descriptor_;
}
bool QueryMsg_Type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QueryMsg_Type QueryMsg::Create;
const QueryMsg_Type QueryMsg::Steal;
const QueryMsg_Type QueryMsg::Transfer;
const QueryMsg_Type QueryMsg::Lookup;
const QueryMsg_Type QueryMsg::NotFound;
const QueryMsg_Type QueryMsg::OK;
const QueryMsg_Type QueryMsg::Exit;
const QueryMsg_Type QueryMsg::Error;
const QueryMsg_Type QueryMsg::Type_MIN;
const QueryMsg_Type QueryMsg::Type_MAX;
const int QueryMsg::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryMsg::kTypeFieldNumber;
const int QueryMsg::kTaskFieldNumber;
const int QueryMsg::kNameFieldNumber;
const int QueryMsg::kNFieldNumber;
const int QueryMsg::kLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryMsg::QueryMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dwork.QueryMsg)
}

void QueryMsg::InitAsDefaultInstance() {
}

QueryMsg::QueryMsg(const QueryMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dwork.QueryMsg)
}

void QueryMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  n_ = 0;
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueryMsg::~QueryMsg() {
  // @@protoc_insertion_point(destructor:dwork.QueryMsg)
  SharedDtor();
}

void QueryMsg::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QueryMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryMsg_descriptor_;
}

const QueryMsg& QueryMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_TaskMsg_2eproto();
  return *default_instance_;
}

QueryMsg* QueryMsg::default_instance_ = NULL;

QueryMsg* QueryMsg::New(::google::protobuf::Arena* arena) const {
  QueryMsg* n = new QueryMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:dwork.QueryMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(QueryMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QueryMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 29u) {
    ZR_(type_, n_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_location()) {
      location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  task_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueryMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dwork.QueryMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .dwork.QueryMsg.Type type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::dwork::QueryMsg_Type_IsValid(value)) {
            set_type(static_cast< ::dwork::QueryMsg_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_task;
        break;
      }

      // repeated .dwork.TaskMsg task = 2;
      case 2: {
        if (tag == 18) {
         parse_task:
          DO_(input->IncrementRecursionDepth());
         parse_loop_task:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_task()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_task;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dwork.QueryMsg.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_n;
        break;
      }

      // optional int32 n = 4;
      case 4: {
        if (tag == 32) {
         parse_n:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &n_)));
          set_has_n();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_location;
        break;
      }

      // optional string location = 6;
      case 6: {
        if (tag == 50) {
         parse_location:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->location().data(), this->location().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dwork.QueryMsg.location");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dwork.QueryMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dwork.QueryMsg)
  return false;
#undef DO_
}

void QueryMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dwork.QueryMsg)
  // required .dwork.QueryMsg.Type type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // repeated .dwork.TaskMsg task = 2;
  for (unsigned int i = 0, n = this->task_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->task(i), output);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dwork.QueryMsg.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional int32 n = 4;
  if (has_n()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->n(), output);
  }

  // optional string location = 6;
  if (has_location()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dwork.QueryMsg.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->location(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dwork.QueryMsg)
}

::google::protobuf::uint8* QueryMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dwork.QueryMsg)
  // required .dwork.QueryMsg.Type type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // repeated .dwork.TaskMsg task = 2;
  for (unsigned int i = 0, n = this->task_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->task(i), false, target);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dwork.QueryMsg.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional int32 n = 4;
  if (has_n()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->n(), target);
  }

  // optional string location = 6;
  if (has_location()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dwork.QueryMsg.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->location(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dwork.QueryMsg)
  return target;
}

int QueryMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:dwork.QueryMsg)
  int total_size = 0;

  // required .dwork.QueryMsg.Type type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  if (_has_bits_[2 / 32] & 28u) {
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 n = 4;
    if (has_n()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->n());
    }

    // optional string location = 6;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->location());
    }

  }
  // repeated .dwork.TaskMsg task = 2;
  total_size += 1 * this->task_size();
  for (int i = 0; i < this->task_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->task(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dwork.QueryMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const QueryMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dwork.QueryMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dwork.QueryMsg)
    MergeFrom(*source);
  }
}

void QueryMsg::MergeFrom(const QueryMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dwork.QueryMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  task_.MergeFrom(from.task_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_n()) {
      set_n(from.n());
    }
    if (from.has_location()) {
      set_has_location();
      location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QueryMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dwork.QueryMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryMsg::CopyFrom(const QueryMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dwork.QueryMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->task())) return false;
  return true;
}

void QueryMsg::Swap(QueryMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryMsg::InternalSwap(QueryMsg* other) {
  std::swap(type_, other->type_);
  task_.UnsafeArenaSwap(&other->task_);
  name_.Swap(&other->name_);
  std::swap(n_, other->n_);
  location_.Swap(&other->location_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryMsg_descriptor_;
  metadata.reflection = QueryMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryMsg

// required .dwork.QueryMsg.Type type = 1;
bool QueryMsg::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueryMsg::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void QueryMsg::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueryMsg::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::dwork::QueryMsg_Type QueryMsg::type() const {
  // @@protoc_insertion_point(field_get:dwork.QueryMsg.type)
  return static_cast< ::dwork::QueryMsg_Type >(type_);
}
 void QueryMsg::set_type(::dwork::QueryMsg_Type value) {
  assert(::dwork::QueryMsg_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:dwork.QueryMsg.type)
}

// repeated .dwork.TaskMsg task = 2;
int QueryMsg::task_size() const {
  return task_.size();
}
void QueryMsg::clear_task() {
  task_.Clear();
}
const ::dwork::TaskMsg& QueryMsg::task(int index) const {
  // @@protoc_insertion_point(field_get:dwork.QueryMsg.task)
  return task_.Get(index);
}
::dwork::TaskMsg* QueryMsg::mutable_task(int index) {
  // @@protoc_insertion_point(field_mutable:dwork.QueryMsg.task)
  return task_.Mutable(index);
}
::dwork::TaskMsg* QueryMsg::add_task() {
  // @@protoc_insertion_point(field_add:dwork.QueryMsg.task)
  return task_.Add();
}
::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg >*
QueryMsg::mutable_task() {
  // @@protoc_insertion_point(field_mutable_list:dwork.QueryMsg.task)
  return &task_;
}
const ::google::protobuf::RepeatedPtrField< ::dwork::TaskMsg >&
QueryMsg::task() const {
  // @@protoc_insertion_point(field_list:dwork.QueryMsg.task)
  return task_;
}

// optional string name = 3;
bool QueryMsg::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QueryMsg::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
void QueryMsg::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void QueryMsg::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& QueryMsg::name() const {
  // @@protoc_insertion_point(field_get:dwork.QueryMsg.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QueryMsg::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dwork.QueryMsg.name)
}
 void QueryMsg::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dwork.QueryMsg.name)
}
 void QueryMsg::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dwork.QueryMsg.name)
}
 ::std::string* QueryMsg::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:dwork.QueryMsg.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QueryMsg::release_name() {
  // @@protoc_insertion_point(field_release:dwork.QueryMsg.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QueryMsg::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dwork.QueryMsg.name)
}

// optional int32 n = 4;
bool QueryMsg::has_n() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void QueryMsg::set_has_n() {
  _has_bits_[0] |= 0x00000008u;
}
void QueryMsg::clear_has_n() {
  _has_bits_[0] &= ~0x00000008u;
}
void QueryMsg::clear_n() {
  n_ = 0;
  clear_has_n();
}
 ::google::protobuf::int32 QueryMsg::n() const {
  // @@protoc_insertion_point(field_get:dwork.QueryMsg.n)
  return n_;
}
 void QueryMsg::set_n(::google::protobuf::int32 value) {
  set_has_n();
  n_ = value;
  // @@protoc_insertion_point(field_set:dwork.QueryMsg.n)
}

// optional string location = 6;
bool QueryMsg::has_location() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void QueryMsg::set_has_location() {
  _has_bits_[0] |= 0x00000010u;
}
void QueryMsg::clear_has_location() {
  _has_bits_[0] &= ~0x00000010u;
}
void QueryMsg::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_location();
}
 const ::std::string& QueryMsg::location() const {
  // @@protoc_insertion_point(field_get:dwork.QueryMsg.location)
  return location_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QueryMsg::set_location(const ::std::string& value) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dwork.QueryMsg.location)
}
 void QueryMsg::set_location(const char* value) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dwork.QueryMsg.location)
}
 void QueryMsg::set_location(const char* value, size_t size) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dwork.QueryMsg.location)
}
 ::std::string* QueryMsg::mutable_location() {
  set_has_location();
  // @@protoc_insertion_point(field_mutable:dwork.QueryMsg.location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QueryMsg::release_location() {
  // @@protoc_insertion_point(field_release:dwork.QueryMsg.location)
  clear_has_location();
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QueryMsg::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    set_has_location();
  } else {
    clear_has_location();
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:dwork.QueryMsg.location)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace dwork

// @@protoc_insertion_point(global_scope)
