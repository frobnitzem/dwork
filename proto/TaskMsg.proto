syntax = "proto2";

package dwork;

message TaskMsg {
  enum State {
    Pending = 0;
    Stolen  = 1;
    Waiting = 2;
    Copying = 3;
    Ready   = 4;
    Started = 5;
    Done    = 6;
    Recorded = 7;
  }

  message Dep {
    required string name     = 1; // globally unique task name
    optional string location = 2; // url
  }
  message LogMsg { // written on entry to ea. state
    required State state = 1;
    required int64 time = 2; // microseconds
  }

  required string name   = 1; // globally unique task name
  required string origin = 2; // hostname

  repeated Dep pred   = 4; // ignored on Transfer
  repeated Dep succ   = 5; // ignored on Create
  repeated LogMsg log = 6;
}

message QueryMsg {
  enum Type {
    Create   = 0; // Create new tasks (requires TaskMsg)
    Steal    = 1; // request a ready task (requires name == hostname)
    Transfer = 2; // notify on completion of a task (requires TaskMsg)
    Lookup   = 3; // lookup a location
    NotFound = 4; // reply to steal / notify
    OK       = 5;
    Exit     = 6; // signal exit of server
    Error    = 7;
  }
  required Type    type = 1;
  repeated TaskMsg task = 2; // required when type == Notify
  optional string  name = 3;     // task to lookup
  optional int32   n = 4;
  optional string  location = 6; // hostname lookup response OR hostname doing stealing
}

